name: Workflow to Deploy SAP_BRONZE Schema Objects

on:
  push:
    branches:
      - main
    paths:
      - 'db'
      - '.github/workflows/ci_cd.yml'
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: 'Environment to deploy to (e.g., DEV, PROD)'
        required: true
        default: 'DEV'
jobs:
  TEST:
    runs-on: ubuntu-latest

    env:
      SNOWSQL_PWD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWSQL_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWSQL_USER: ${{ secrets.SNOWFLAKE_USERNAME }}
      ENVIRONMENT: ${{ github.event.inputs.ENVIRONMENT }}  # Retrieve the environment input
      SNOWSQL_DATABASE: DB_${{ vars.ENV }}          # Combine DB_ prefix with the environment
      SNOWSQL_SCHEMA: MY_SCHEMA

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
          SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash

      - name: Set SNOWSQL_DATABASE Environment Variable
        run: echo "SNOWSQL_DATABASE=DB_${{ github.event.inputs.ENVIRONMENT }}" >> $GITHUB_ENV

      - name: Test SnowSQL Installation
        run: |
          echo "Using Database: $SNOWSQL_DATABASE"
          ~/bin/snowsql

      - name: Create Stage
        run: |
          ~/bin/snowsql -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER -p $SNOWSQL_PWD \
            -d $SNOWSQL_DATABASE -s $SNOWSQL_SCHEMA -q "CREATE OR REPLACE STAGE my_stage;"