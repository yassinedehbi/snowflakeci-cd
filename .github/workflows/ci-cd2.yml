name: Deploy data pipeline to prod

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: 'Environment to deploy to (e.g., DEV, PROD)'
        required: false
        default: "'DEV'"  # Default for manual runs with quotes

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python packages
        run: pip install snowflake-cli-labs

      # Set environment based on the trigger type
      - name: Set environment for push to main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: echo "ENVIRONMENT='PROD'" >> $GITHUB_ENV

      - name: Set environment for workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        run: echo "ENVIRONMENT=${{ github.event.inputs.ENVIRONMENT || '\'DEV\'' }}" >> $GITHUB_ENV

      - name: Deploy data pipeline
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USERNAME }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          snow sql -q "ALTER GIT REPOSITORY db_dev.utils.git_repo_stage FETCH" --temporary-connection --account $SNOWFLAKE_ACCOUNT --user $SNOWFLAKE_USER 
          for file in $(find db/ -type f -path "*/Tables/*.sql"); do
            echo "Executing Table script: $file"
            snow sql -q "EXECUTE IMMEDIATE FROM @db_dev.utils.git_repo_stage/branches/main/$file USING (environment => $ENVIRONMENT, retention_time => 1)" --temporary-connection --account $SNOWFLAKE_ACCOUNT --user $SNOWFLAKE_USER 
          done
